{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React\\\\GB_React\\\\myapp\\\\Lesson-6\\\\src\\\\components\\\\Chat\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport \"../../App.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { AUTHORS } from \"../../utils/constants\";\nimport { Form } from \"../Form\";\nimport { MessageList } from \"../MessageList\";\nimport { createTheme } from \"@mui/material/styles\";\nimport { ThemeProvider } from \"@emotion/react\";\nimport { cyan, green } from \"@mui/material/colors\";\nimport { ChatList } from \"../ChatList/ChatList\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chats = [{\n  id: \"chat1\"\n}];\nconst messages = {\n  chat1: []\n};\nconst theme = createTheme({\n  palette: {\n    primary: cyan,\n    secondary: green\n  },\n  typography: {\n    fontSize: 14\n  }\n});\nexport function Chat() {\n  _s();\n\n  const params = useParams();\n  const {\n    chatId\n  } = params;\n  const [messageList, setMessageList] = useState({\n    chat1: [{\n      id: \"m21\",\n      author: \"Petter\",\n      text: \"Hi!\"\n    }, {\n      id: \"m22\",\n      author: \"Bot\",\n      text: \"Good day!\"\n    }],\n    chat2: [{\n      id: \"m11\",\n      author: \"Alice\",\n      text: \"Hello!\"\n    }, {\n      id: \"m12\",\n      author: \"Bot\",\n      text: \"Hi!\"\n    }],\n    chat3: []\n  });\n  const messagesEnd = useRef();\n\n  const handleAddMessage = text => {\n    sendMessage(text, AUTHORS.ME);\n  };\n\n  const sendMessage = (text, author) => {\n    const newMsg = {\n      id: `msg-${Date.now()}`,\n      author,\n      text\n    };\n    setMessageList(prevMessageList => ({ ...prevMessageList,\n      [chatId]: [...prevMessageList[chatId], newMsg]\n    }));\n  };\n\n  useEffect(() => {\n    var _messagesEnd$current, _messageList$chatId, _messageList$chatId2, _messageList$chatId3;\n\n    (_messagesEnd$current = messagesEnd.current) === null || _messagesEnd$current === void 0 ? void 0 : _messagesEnd$current.scrollIntoView();\n    let timeout;\n\n    if (((_messageList$chatId = messageList[chatId]) === null || _messageList$chatId === void 0 ? void 0 : (_messageList$chatId2 = _messageList$chatId[((_messageList$chatId3 = messageList[chatId]) === null || _messageList$chatId3 === void 0 ? void 0 : _messageList$chatId3.length) - 1]) === null || _messageList$chatId2 === void 0 ? void 0 : _messageList$chatId2.author) === AUTHORS.ME) {\n      timeout = setTimeout(() => {\n        sendMessage(\"Hi I am a BOT\", AUTHORS.BOT);\n      }, 1000);\n    }\n\n    return () => clearTimeout(timeout);\n  }, [messageList]);\n  useEffect(() => {\n    console.log(messagesEnd); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!messageList[chatId]) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/chats\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-content\",\n          children: /*#__PURE__*/_jsxDEV(MessageList, {\n            messages: messageList[chatId]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleAddMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"OjB1E8YWx9A+jCoKGKi87o/SpLc=\", false, function () {\n  return [useParams];\n});\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/user/Desktop/React/GB_React/myapp/Lesson-6/src/components/Chat/index.js"],"names":["useState","useEffect","useRef","AUTHORS","Form","MessageList","createTheme","ThemeProvider","cyan","green","ChatList","Navigate","useParams","chats","id","messages","chat1","theme","palette","primary","secondary","typography","fontSize","Chat","params","chatId","messageList","setMessageList","author","text","chat2","chat3","messagesEnd","handleAddMessage","sendMessage","ME","newMsg","Date","now","prevMessageList","current","scrollIntoView","timeout","length","setTimeout","BOT","clearTimeout","console","log"],"mappings":";;;AAAA,OAAO,eAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,sBAA5B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,kBAApC;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,EAAE,EAAE;AAAN,CAAD,CAAd;AACA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,KAAK,EAAE;AADQ,CAAjB;AAIA,MAAMC,KAAK,GAAGX,WAAW,CAAC;AACxBY,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAEX,IADF;AAEPY,IAAAA,SAAS,EAAEX;AAFJ,GADe;AAKxBY,EAAAA,UAAU,EAAE;AACVC,IAAAA,QAAQ,EAAE;AADA;AALY,CAAD,CAAzB;AAUA,OAAO,SAASC,IAAT,GAAgB;AAAA;;AACrB,QAAMC,MAAM,GAAGZ,SAAS,EAAxB;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAaD,MAAnB;AAEA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgC3B,QAAQ,CAAC;AAC7CgB,IAAAA,KAAK,EAAE,CACL;AAAEF,MAAAA,EAAE,EAAE,KAAN;AAAac,MAAAA,MAAM,EAAE,QAArB;AAA+BC,MAAAA,IAAI,EAAE;AAArC,KADK,EAEL;AAAEf,MAAAA,EAAE,EAAE,KAAN;AAAac,MAAAA,MAAM,EAAE,KAArB;AAA4BC,MAAAA,IAAI,EAAE;AAAlC,KAFK,CADsC;AAK7CC,IAAAA,KAAK,EAAE,CACL;AAAEhB,MAAAA,EAAE,EAAE,KAAN;AAAac,MAAAA,MAAM,EAAE,OAArB;AAA8BC,MAAAA,IAAI,EAAE;AAApC,KADK,EAEL;AAAEf,MAAAA,EAAE,EAAE,KAAN;AAAac,MAAAA,MAAM,EAAE,KAArB;AAA4BC,MAAAA,IAAI,EAAE;AAAlC,KAFK,CALsC;AAS7CE,IAAAA,KAAK,EAAE;AATsC,GAAD,CAA9C;AAYA,QAAMC,WAAW,GAAG9B,MAAM,EAA1B;;AAEA,QAAM+B,gBAAgB,GAAIJ,IAAD,IAAU;AACjCK,IAAAA,WAAW,CAACL,IAAD,EAAO1B,OAAO,CAACgC,EAAf,CAAX;AACD,GAFD;;AAIA,QAAMD,WAAW,GAAG,CAACL,IAAD,EAAOD,MAAP,KAAkB;AACpC,UAAMQ,MAAM,GAAG;AACbtB,MAAAA,EAAE,EAAG,OAAMuB,IAAI,CAACC,GAAL,EAAW,EADT;AAEbV,MAAAA,MAFa;AAGbC,MAAAA;AAHa,KAAf;AAKAF,IAAAA,cAAc,CAAEY,eAAD,KAAsB,EACnC,GAAGA,eADgC;AAEnC,OAACd,MAAD,GAAU,CAAC,GAAGc,eAAe,CAACd,MAAD,CAAnB,EAA6BW,MAA7B;AAFyB,KAAtB,CAAD,CAAd;AAID,GAVD;;AAYAnC,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,4BAAA+B,WAAW,CAACQ,OAAZ,8EAAqBC,cAArB;AAEA,QAAIC,OAAJ;;AACA,QACE,wBAAAhB,WAAW,CAACD,MAAD,CAAX,oGAAsB,yBAAAC,WAAW,CAACD,MAAD,CAAX,8EAAqBkB,MAArB,IAA8B,CAApD,+EAAwDf,MAAxD,MACAzB,OAAO,CAACgC,EAFV,EAGE;AACAO,MAAAA,OAAO,GAAGE,UAAU,CAAC,MAAM;AACzBV,QAAAA,WAAW,CAAC,eAAD,EAAkB/B,OAAO,CAAC0C,GAA1B,CAAX;AACD,OAFmB,EAEjB,IAFiB,CAApB;AAGD;;AAED,WAAO,MAAMC,YAAY,CAACJ,OAAD,CAAzB;AACD,GAdQ,EAcN,CAAChB,WAAD,CAdM,CAAT;AAgBAzB,EAAAA,SAAS,CAAC,MAAM;AACd8C,IAAAA,OAAO,CAACC,GAAR,CAAYhB,WAAZ,EADc,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAI,CAACN,WAAW,CAACD,MAAD,CAAhB,EAA0B;AACxB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAsB,MAAA,OAAO;AAA7B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAER,KAAtB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BAGE;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACE,QAAC,WAAD;AAAa,YAAA,QAAQ,EAAES,WAAW,CAACD,MAAD;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEQ;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAzEeV,I;UACCX,S;;;KADDW,I","sourcesContent":["import \"../../App.css\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { AUTHORS } from \"../../utils/constants\";\r\nimport { Form } from \"../Form\";\r\nimport { MessageList } from \"../MessageList\";\r\n\r\nimport { createTheme } from \"@mui/material/styles\";\r\nimport { ThemeProvider } from \"@emotion/react\";\r\nimport { cyan, green } from \"@mui/material/colors\";\r\nimport { ChatList } from \"../ChatList/ChatList\";\r\nimport { Navigate, useParams } from \"react-router-dom\";\r\n\r\nconst chats = [{ id: \"chat1\" }];\r\nconst messages = {\r\n  chat1: [],\r\n};\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: cyan,\r\n    secondary: green,\r\n  },\r\n  typography: {\r\n    fontSize: 14,\r\n  },\r\n});\r\n\r\nexport function Chat() {\r\n  const params = useParams();\r\n  const { chatId } = params;\r\n\r\n  const [messageList, setMessageList] = useState({\r\n    chat1: [\r\n      { id: \"m21\", author: \"Petter\", text: \"Hi!\" },\r\n      { id: \"m22\", author: \"Bot\", text: \"Good day!\" },\r\n    ],\r\n    chat2: [\r\n      { id: \"m11\", author: \"Alice\", text: \"Hello!\" },\r\n      { id: \"m12\", author: \"Bot\", text: \"Hi!\" },\r\n    ],\r\n    chat3: [],\r\n  });\r\n\r\n  const messagesEnd = useRef();\r\n\r\n  const handleAddMessage = (text) => {\r\n    sendMessage(text, AUTHORS.ME);\r\n  };\r\n\r\n  const sendMessage = (text, author) => {\r\n    const newMsg = {\r\n      id: `msg-${Date.now()}`,\r\n      author,\r\n      text,\r\n    };\r\n    setMessageList((prevMessageList) => ({\r\n      ...prevMessageList,\r\n      [chatId]: [...prevMessageList[chatId], newMsg],\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    messagesEnd.current?.scrollIntoView();\r\n\r\n    let timeout;\r\n    if (\r\n      messageList[chatId]?.[messageList[chatId]?.length - 1]?.author ===\r\n      AUTHORS.ME\r\n    ) {\r\n      timeout = setTimeout(() => {\r\n        sendMessage(\"Hi I am a BOT\", AUTHORS.BOT);\r\n      }, 1000);\r\n    }\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [messageList]);\r\n\r\n  useEffect(() => {\r\n    console.log(messagesEnd);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (!messageList[chatId]) {\r\n    return <Navigate to=\"/chats\" replace />;\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className=\"App\">\r\n        {/* <ChatList /> */}\r\n\r\n        <div>\r\n          <div className=\"App-content\">\r\n            <MessageList messages={messageList[chatId]} />\r\n          </div>\r\n          <Form onSubmit={handleAddMessage} />\r\n        </div>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}